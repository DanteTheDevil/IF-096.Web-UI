@import "../../../../styles.scss";

.warning {
  background-color: rgba(21,101,192,1);
  background: -moz-linear-gradient(left, rgba(255,0,0,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -webkit-gradient(left top, right top, color-stop(0%, rgba(255,0,0,1)), color-stop(0.75%, rgba(255,255,255,1)), color-stop(100%, rgba(255,255,255,1)));
  background: -webkit-linear-gradient(left, rgba(255,0,0,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -o-linear-gradient(left, rgba(255,0,0,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -ms-linear-gradient(left, rgba(255,0,0,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: linear-gradient(to right, rgba(255,0,0,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff0000', endColorstr='#ffffff', GradientType=1 );
}

.normal {
  background-color: rgba(21,101,192,1);
  background: -moz-linear-gradient(left, rgba(21,101,192,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -webkit-gradient(left top, right top, color-stop(0%, rgba(21,101,192,1)), color-stop(0.75%, rgba(255,255,255,1)), color-stop(100%, rgba(255,255,255,1)));
  background: -webkit-linear-gradient(left, rgba(21,101,192,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -o-linear-gradient(left, rgba(21,101,192,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: -ms-linear-gradient(left, rgba(21,101,192,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  background: linear-gradient(to right, rgba(21,101,192,1) 0%, rgba(255,255,255,1) 0.75%, rgba(255,255,255,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1565c0', endColorstr='#ffffff', GradientType=1 );
}

mat-card {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 5px 2px;
  padding: 10px 5px;
  position: relative;
  i {cursor: pointer; }

  @media (min-width: 768px) { padding: 15px; }

  .class-lock {width: 10%; }
  .clas-transition {width: 10%; }
  .new-class-title {
    position: relative;
    width: 35%; 
    .class-info {width: 100%; }
  }
  .class-edit-title { width: 10%; }
  input {
    // width: 70%;
    height: 35px;
    position: relative;
    font-size: 1em;
    text-align: center;
    // @media (min-width: 481px) and (max-width: 767px) { font-size: 0.55em; }
    // @media (min-width: 768px) { font-size: 0.8em; }
  }
  
  input[type="checkbox"] {
    display:none;
  }

  label {
    display: block;
    width: 24px;
    height: 48px;
    font-size: 2em;
    margin: 2px;
    cursor: pointer;
  }

  .class-info {
    width: 35%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    div:first-child{
      min-width: 100px;
    }
    .class-name { font-weight: 800; }
    .class-year {
      color: gray;
      font-size: 0.8em;
      font-style: italic;
    }
    .material-icons { 
      display: block;
      padding: 2px 0;
      font-size: 0.65em;
      margin-left: -25px; 
      color: rgba(128, 128, 128, 0.5); }
  }

  .class-info.empty-class{
    cursor: default;
  }

  .class-info.hidden {
    display: none;
  }
}

mat-card.locked.transited, mat-card.locked:hover.transited {
  background-color: #5fb663;
  cursor: default;
  pointer-events: none;
}

mat-card.locked, mat-card.locked:hover {
  opacity: 0.6;
  background: #dad3d385;
  .class-info, .class-edit-title, .class-transition {
    pointer-events: none;
  }
}

::ng-deep mat-form-field {
   width: 100%;
  @media (min-width: 768px) {
    .mat-form-field-wrapper {
      margin: 0 auto;
    }
   }
}

mat-form-field.locked, mat-form-field.locked div {
  display: none;
  cursor: default;
  pointer-events: none;
  color: rgb(84, 84, 84);
  background-color: rgb(235, 235, 228);
}

mat-card:hover {
  background: #00000024;
}

.new-class-name {
  padding-left: 5px;
  overflow: hidden;
}

.validation-error {
  margin: 0 auto;
  padding: 0px;
  color: red;
  min-width: 200px;
  position: absolute;
  bottom: -20px;
  height: 25px;
  overflow: hidden;
  p { font-size: 0.5em; }
  @media (max-width: 481px) { right: -25%; }
  @media (min-width: 481px) and (max-width: 768px){ right: -30%; }
  @media (min-width: 768px) and (max-width: 998px){ right: -10%; }
  @media (min-width: 768px) and (max-width: 1300px){ right: 5%; }
  @media (min-width: 1300px) { right: 25%; }
}
.new-class-title.locked{
  .validation-error {bottom: -5px;}
}
